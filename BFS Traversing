#include <stdio.h>
int q[10];

int l=0;
int bfs(int **a,int n);
int enque(int a);
int deque();
int main()
{
    int i,n,e,s,d,j;
    
    scanf("%d %d",&n,&e);
    
    int **a=(int **)malloc(sizeof(int *)*n);
    for(i=0;i<n;i++)
    {
        a[i]=(int *)malloc(sizeof(int)*n);
    }
    for(i=0;i<n;i++)
    for(j=0;j<n;j++)
    a[i][j]=0;
    for(i=0;i<e;i++)
    {
        scanf("%d %d",&s,&d);
        a[s-1][d-1]=1;
        a[d-1][s-1]=1;
    }
    
    printf("bfs:");
    bfs(a,n);
    printf("\nadjacency matrix:");
    for(i=0;i<n;i++)
    {
        printf("\n");
        for(j=0;j<n;j++)
        {
            printf("%d",a[i][j]);
        }
    }
    
    
    return 0;
}

int deque()
{
    int i;   
    printf("%d ",q[0]);
    for(i=0;i<l-1;i++)
    {
        q[i]=q[i+1];
    }
    q[i]=0;
    
    l--;
    return 0;
}

int enque(int a)
{
    q[l]=a;
    l++;
    return 0;
}

int bfs(int **a,int n)
{
    int v,i,c,j;
    int *vis=(int *)malloc(sizeof(int)*n);
    for(i=0;i<n;i++)
    {
        vis[i]=0;
    }
    for(i=0;i<10;i++)
    {
        q[0]=0;
    }
    vis[0]=1;
    enque(1);
   // printf("%d %d",q[0],l);
    while(q[0]!=0)
    {
        c=q[0]-1;
        for(i=0;i<n;i++)
        {
            if(a[c][i]==1 && vis[i]==0 )
            {
                vis[i]=1;
                v=i+1;
                enque(v);
            }
        }
        
        deque();
        
    }
    
 return 0;   
}
